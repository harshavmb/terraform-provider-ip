builds:
- env:
    # goreleaser does not work with CGO, it could also complicate
    # usage by users in CI/CD systems like Terraform Cloud where
    # they are unable to install libraries.
    - CGO_ENABLED=0
  mod_timestamp: '{{ .CommitTimestamp }}'
  flags:
    - -trimpath
  ldflags:
    - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
  goos:
    #- freebsd
    #- windows
    - linux
    #- darwin
  goarch:
    - amd64
    #- '386'
    #- arm
    #- arm64
  ignore:
    - goos: darwin
      goarch: '386'
      # windows_arm64 builds fail: exit status 2: # golang.org/x/sys/windows
      #../../../.go/pkg/mod/golang.org/x/sys@v0.0.0-20200223170610-d5e6a3e2c0ae/windows/zsyscall_windows.go:2833:38: undefined: WSAData
      #../../../.go/pkg/mod/golang.org/x/sys@v0.0.0-20200223170610-d5e6a3e2c0ae/windows/zsyscall_windows.go:3106:51: undefined: Servent
      #../../../.go/pkg/mod/golang.org/x/sys@v0.0.0-20200223170610-d5e6a3e2c0ae/windows/zsyscall_windows.go:3120:50: undefined: Servent    
    - goos: windows
      goarch: arm64
publishers:
  - name: generate-tf-api-documents
    cmd: >-
      /tmp/tf-provider-registry-api-generator      
      --bucket-name 'generic-production-iac'
      --terraform-provider '{{ .ProjectName }}'      
      --namespace 'amadeus'
      --fingerprint '{{ .Env.GPG_FINGERPRINT }}'
      --provider-version {{ .Tag }}
    env:
      - "PATH={{ .Env.PATH }}"
      - "MUC_ARTIFACTORY_USER={{ .Env.MUC_ARTIFACTORY_USER }}"
      - "MUC_ARTIFACTORY_TOKEN={{ .Env.MUC_ARTIFACTORY_TOKEN }}"
      - "RND_ARTIFACTORY_USER={{ .Env.ARTIFACTORY_PRODUCTION_USERNAME }}"
      - "RND_ARTIFACTORY_PASSWORD={{ .Env.ARTIFACTORY_PRODUCTION_SECRET }}"
release:
  # to disable automatic push to github as we use artifactory
  disable: true
  # If you want to manually examine the release before its live, uncomment this line:
  # draft: true  
changelog:
  skip: true      